- hosts: all
  user: root
  vars:
    user: altiire
    password: $6$3sfn/KljzirbhMWu$.QvnVqrfV4a8/1YShi9HyzK1qAonQsKYP0if2qm6niXdJn7jhdWC2T4HFM9Wtd489IF.AjswGckjG.GjBzJf3/

  tasks:
    ## Instaling packages
    - name: Installing base packages
      apt:
        pkg=sudo,zsh,git,vim-nox,build-essential,python,python-dev,cmake
        state=latest
      register: installation

    ## Create and configure user
    - name: Create user {{ user }}
      user:
        name={{ user }}
        password={{ password }}
        groups=sudo
        shell=/bin/zsh
      when: installation is success
      register: create

    - name: Set authorized key
      authorized_key:
        user: "{{ user }}"
        state: present
        key: https://raw.githubusercontent.com/Altiire/AltiireAutoConf/master/files/altiire.pub

      when: create is success

    - name: Allow {{ user }} to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^{{ user }}'
        line: '{{ user }} ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
      when: create is success

    ## Configure zsh
    - name: Backing up existing ~/.zshrc
      shell: if [ -f ~/.zshrc ]; then mv ~/.zshrc ~/.zshrc.old; fi
      when: create is success
      become: yes
      become_user: "{{ user }}"

    - name: Cloning oh-my-zsh
      git:
        repo=https://github.com/robbyrussell/oh-my-zsh
        dest=~/.oh-my-zsh
      when: create is success
      register: ohmyzsh
      become: yes
      become_user: "{{ user }}"

    - name: Creating new ~/.zshrc
      copy:
        src=~/.oh-my-zsh/templates/zshrc.zsh-template
        dest=~/.zshrc
      when: ohmyzsh is success
      become: yes
      become_user: "{{ user }}"

    ## Configure .gitconfig
    - name: gitconfig user.name
      git_config:
        name: user.name
        scope: global
        value: RaphaÃ«l Caruso
      when: create is success
      become: yes
      become_user: "{{ user }}"

    - name: gitconfig user.email
      git_config:
        name: user.email
        scope: global
        value: altiire@gmail.com
      when: create is success
      become: yes
      become_user: "{{ user }}"

    - name: gitconfig core.editor
      git_config:
        name: core.editor
        scope: global
        value: vim
      when: create is success
      become: yes
      become_user: "{{ user }}"

    - name: gitconfig push.default
      git_config:
        name: push.default
        scope: global
        value: matching
      when: create is success
      become: yes
      become_user: "{{ user }}"

    - name: gitconfig color.ui
      git_config:
        name: color.ui
        scope: global
        value: auto
      when: create is success
      become: yes
      become_user: "{{ user }}"

    - name: gitconfig pull.rebase
      git_config:
        name: pull.rebase
        scope: global
        value: true
      when: create is success
      become: yes
      become_user: "{{ user }}"

    ## Configure Vim
    - name:
      get_url:
        url: https://raw.githubusercontent.com/Altiire/AltiireAutoConf/master/files/vimrc
        dest: ~/.vimrc
      when: create is success
      become: yes
      become_user: "{{ user }}"

    - name: Cloning Vundle
      git:
        repo=https://github.com/VundleVim/Vundle.vim.git
        dest=~/.vim/bundle/Vundle.vim
      when: create is success
      register: clone_vundle
      become: yes
      become_user: "{{ user }}"

    - name: Install Vundle
      shell: vim -E -s -c "source ~/.vimrc" -c PluginInstall -c qall
      when: clone_vundle is success
      register: install_vundle
      become: yes
      become_user: "{{ user }}"

    - name: Configure YouCompleteMe
      shell: python ~/.vim/bundle/YouCompleteMe/install.py --clang-completer
      when: install_vundle is success
      become: yes
      become_user: "{{ user }}"
